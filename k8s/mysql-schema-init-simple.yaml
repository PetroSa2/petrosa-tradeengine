apiVersion: batch/v1
kind: Job
metadata:
  name: petrosa-tradeengine-mysql-schema-init
  namespace: petrosa-apps
  labels:
    app: petrosa-tradeengine
    component: mysql-schema-init
spec:
  ttlSecondsAfterFinished: 100
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: petrosa-tradeengine
        component: mysql-schema-init
    spec:
      restartPolicy: Never
      containers:
      - name: mysql-schema-init
        image: mysql:8.0
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "Parsing MySQL URI..."

          # Parse MYSQL_URI
          # Format: mysql+pymysql://user:pass@host:port/database
          MYSQL_URI_CLEAN=$(echo "$MYSQL_URI" | sed 's|mysql+pymysql://||')

          # Extract components
          USER_PASS=$(echo "$MYSQL_URI_CLEAN" | cut -d'@' -f1)
          HOST_PORT_DB=$(echo "$MYSQL_URI_CLEAN" | cut -d'@' -f2)

          MYSQL_USER=$(echo "$USER_PASS" | cut -d':' -f1)
          MYSQL_PASSWORD=$(echo "$USER_PASS" | cut -d':' -f2)

          HOST_PORT=$(echo "$HOST_PORT_DB" | cut -d'/' -f1)
          MYSQL_DATABASE=$(echo "$HOST_PORT_DB" | cut -d'/' -f2)

          MYSQL_HOST=$(echo "$HOST_PORT" | cut -d':' -f1)
          MYSQL_PORT=$(echo "$HOST_PORT" | cut -d':' -f2)

          echo "MySQL Connection: $MYSQL_USER@$MYSQL_HOST:$MYSQL_PORT/$MYSQL_DATABASE"

          # Test connection
          echo "Testing MySQL connection..."
          mysql -h"$MYSQL_HOST" -P"$MYSQL_PORT" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" -e "SELECT 1" || {
            echo "ERROR: Cannot connect to MySQL"
            exit 1
          }

          echo "✓ MySQL connection successful"

          # Create database if needed
          mysql -h"$MYSQL_HOST" -P"$MYSQL_PORT" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" \
            -e "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DATABASE\` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"

          # Check if positions table exists
          TABLE_EXISTS=$(mysql -h"$MYSQL_HOST" -P"$MYSQL_PORT" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" \
            -D"$MYSQL_DATABASE" -N -e "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema='$MYSQL_DATABASE' AND table_name='positions';")

          if [ "$TABLE_EXISTS" = "1" ]; then
            echo "✓ positions table already exists"
            mysql -h"$MYSQL_HOST" -P"$MYSQL_PORT" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" \
              -D"$MYSQL_DATABASE" -e "DESCRIBE positions;"
          else
            echo "Creating positions table..."
            mysql -h"$MYSQL_HOST" -P"$MYSQL_PORT" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" \
              -D"$MYSQL_DATABASE" << 'SQL_SCRIPT'

          CREATE TABLE IF NOT EXISTS positions (
              id BIGINT AUTO_INCREMENT PRIMARY KEY,
              position_id VARCHAR(255) UNIQUE NOT NULL,
              strategy_id VARCHAR(255) NOT NULL,
              exchange VARCHAR(50) NOT NULL DEFAULT 'binance',
              symbol VARCHAR(50) NOT NULL,
              position_side ENUM('LONG', 'SHORT') NOT NULL,
              entry_price DECIMAL(20, 8) NOT NULL,
              quantity DECIMAL(20, 8) NOT NULL,
              entry_time DATETIME NOT NULL,
              stop_loss DECIMAL(20, 8),
              take_profit DECIMAL(20, 8),
              status ENUM('open', 'closed') NOT NULL DEFAULT 'open',
              metadata JSON,
              exchange_position_id VARCHAR(255),
              entry_order_id VARCHAR(255),
              entry_trade_ids JSON,
              stop_loss_order_id VARCHAR(255),
              take_profit_order_id VARCHAR(255),
              commission_asset VARCHAR(20),
              commission_total DECIMAL(20, 8),
              exit_price DECIMAL(20, 8),
              exit_time DATETIME,
              exit_order_id VARCHAR(255),
              exit_trade_ids JSON,
              pnl DECIMAL(20, 8),
              pnl_pct DECIMAL(10, 4),
              pnl_after_fees DECIMAL(20, 8),
              duration_seconds INT,
              close_reason VARCHAR(50),
              final_commission DECIMAL(20, 8),
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
              INDEX idx_strategy_id (strategy_id),
              INDEX idx_exchange (exchange),
              INDEX idx_symbol (symbol),
              INDEX idx_status (status),
              INDEX idx_entry_time (entry_time),
              INDEX idx_exchange_position_id (exchange_position_id),
              INDEX idx_entry_order_id (entry_order_id)
          ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

          SQL_SCRIPT

            echo "✓ positions table created successfully"
            mysql -h"$MYSQL_HOST" -P"$MYSQL_PORT" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" \
              -D"$MYSQL_DATABASE" -e "DESCRIBE positions;"
          fi

          echo ""
          echo "============================================"
          echo "✓ MySQL schema initialization complete"
          echo "============================================"

        env:
        - name: MYSQL_URI
          valueFrom:
            secretKeyRef:
              name: petrosa-sensitive-credentials
              key: MYSQL_URI
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
